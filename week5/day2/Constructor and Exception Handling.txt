Constructor:
-----------------
constructor special method

ClassName obj =new ClassName();

return type---->no

syntax:

public ClassName(){

}

JVM
Car obj =new Car();

int a,b;
for(int i=0;)


A Constructor like method
Constructor has a same name like class
when object for the class create --->Constructor invoked
new keyword-->invoke constructor and allocate some memory for the object
java compiler-->default constructor

Constructors are essential for creating and setting up objects before they can be used in the program.
constructor Chain--->this keyword,super keyword

syntax:
 
 public className(){
 
 }

types:
1.No arg(default constructor)
className();
2.Parameterized constructor
className(String name,int id)


syntax:
public ClassName();

//Create obj for class
ClassName obj=new ClassName();

method
public void menthodName(){
}

this Keyword:
---refer current class method
---used for constructor chaining
---pass arg in method can use this
---return current class instance
this-->return same class object 

Super--> The super keyword in java comes in a role with the concept of inheritance.
the super keyword refers to the object of an immediate parent class. It means the 
super keyword uses in subclasses to access the object of the superclass.
variable, constructor, and method of a superclass by using the super keyword. 
1. Java super keyword can access the variable of the parent class  
2. Java super keyword can invoke the constructor of the parent class
3. Java super keyword can access the method of the parent class



static keyword:

The static keyword can be used as a 
static variable, static method, static block, and static class. 

1.static keyword with variable it is called static variable

Syntax to declare the static variables:

static dataType variableName = value;

2. Static method in Java

You can declare a static method by using of static keyword.
1. Static methods are belonging to a class.
2. You can access a static method by using the class name. You do not have the need to create an object.
3. A static method can access only static variables. If you write any non-static variable in a static method,
then it will throw an exception at compilation time.
syntax:
access_modifier static return_Type method_Name()
{
    // body of method
}

final 
-----
its a keyword used to apply some restriction to the user
cvv-123

final can applied to classes,method,variable

1.final variable-constant you cannot changes the value
2.final method-you cannot override the final method
3.final class-you cannot extends the final class


============================================================================


Exception Handling:
===================
During the execution of a program if any unwanted or unexpected error comes that is called an exception. 

It means if anything happens wrong during the execution of a program and disrupts the normal flow of the program’s instructions is called an exception. 

Exceptions may occur for different reasons:

-->If the user has entered the wrong data. Like the user is trying to divide any value by 0 e.g. 5/0.
-->If the user tries to open a file with an invalid name.
-->If a user tries to access an array with a negative index value.
-->If a user tries to print a page but the printer doesn’t find it.



There are two types of Exceptions, 
--->Checked exception in java 
--->unchecked exception in java

Java provides some keywords to handle an exception, 
try catch finally  is the keyword that is used to control the exception.
1. try keyword: The try keyword is used on the block of statements where we are excepting an exception.
If any exception occurs in the try block then the control jumps to the next block 
which will be the catch block or finally block. 
But it will handle the situation and the execution of the program will not be stopped.

2. catch keyword: The catch keyword is used with a block that is known as a catch block.
The catch block catches the exception that is through by try block. 
We can catch the exception and print the reason of the exception.

3. finally keyword: This keyword is also used with a block but it is a special block because it always executes whether any error occurs or not.
We can perform some important operations like closing the DB connection.

Checked exceptions in java
Checked exceptions in java are also known as compile-time exceptions because these exceptions are checked by the compiler at compile-time. 
If any method throws a checked exception, then it is the programmer’s responsibility either handle the exception or throw the exception by using the throws keyword. 
We can’t ignore these exceptions at compile time. 
The JVM checks these exceptions at the time of compilation time.

Unchecked exception in java
An unchecked exception in java is an exception that is not checked at the compiled time.
The compiler is not able to recognize these exceptions at compile time. 
An unchecked exception in java occurs at the time of execution, so they are also called Runtime Exceptions.
For example NullPointerException, ArithmeticException, ArrayIndexOutOfBound, logic error, etc.


throw keyword in java
The throw keyword in java uses to throw an exception from a method or block of code.
If you want to throw an exception on the basis of certain conditions, 
you can use the throw keyword.

For example, if a user entered the null/blank password we should throw an exception to the client.
We can throw either checked or unchecked exceptions. 
During the execution of the method if the compiler encounters a throw keyword then the execution of the current method stop and returned to the caller.
The compiler tries to find the nearest try block.
If thrown exception match with the catch block and is handle by a catch block otherwise it tries to find the next try block and so on. 
If no one catch block matches with the exception, then the default exception handler executes automatically.


throws keyword in java
---------------------------
throws keyword in java uses in a method declaration, denoted which Exception can possibly be thrown by this method.

By using the throws keyword in java, we can throw multiple exceptions.

During the execution of the method if any exception occurs and the programmer already uses
the throws keyword in java then the execution of the current method stops and returns to the caller.
Then it depends upon the programmer either handling this exception by catching it or can rethrow it.
throws keyword only uses for checked exceptions and the usage of the throws keyword
